CREATE TABLE public.attendancelog (
	attendancelog int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	logdate timestamptz NOT NULL,
	logon bool NULL,
	cardnumber varchar(60) NULL,
	date_dim_id int4 NULL,
	CONSTRAINT attendancelog_pkey PRIMARY KEY (attendancelog)
);

CREATE TABLE public."member" (
	memberid int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	firstname varchar(60) NOT NULL,
	lastname varchar(60) NOT NULL,
	contactemail varchar(60) NULL,
	contactphonenumber varchar(20) NULL,
	memberof text NULL,
	"type" text NULL,
	createddate date NULL,
	schoolemail varchar(60) NULL,
	school varchar(60) NULL,
	CONSTRAINT member_pkey PRIMARY KEY (memberid)
);

CREATE TABLE public.membernfccardassoc (
	memberid int4 NOT NULL,
	nfccardid int4 NOT NULL
);

CREATE TABLE public.nfccard (
	nfccardid int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	cardnumber varchar(60) NOT NULL,
	isactive bool NOT NULL,
	createddate timestamptz NOT NULL DEFAULT now(),
	CONSTRAINT nfccard_pkey PRIMARY KEY (nfccardid)
);

CREATE OR REPLACE VIEW public.vw_attendance
AS SELECT login.meetingdate,
    login.date_dim_id,
    login.cardnumber,
    login.memberid,
    login.memberof,
    login.type,
    login.firstname,
    login.lastname,
    timezone('CST'::text, login.logdate) AS logintime,
    timezone('CST'::text, logout.logdate) AS logouttime,
    COALESCE(round((date_part('epoch'::text, logout.logdate - login.logdate) / 60::double precision)::numeric, 0), 60::numeric) AS attendancetime
   FROM ( SELECT a.logdate::date AS meetingdate,
            a.date_dim_id,
            a.logdate,
            n.nfccardid,
            n.cardnumber,
            m.memberid,
            m.memberof,
            m.type,
            m.firstname,
            m.lastname,
            rank() OVER (PARTITION BY n.cardnumber, (to_char(a.logdate::date::timestamp with time zone, 'YYYYMMDD'::text)) ORDER BY a.logdate) AS rnk
           FROM attendancelog a
             JOIN nfccard n ON a.cardnumber::text = n.cardnumber::text
             JOIN membernfccardassoc m2 ON m2.nfccardid = n.nfccardid
             JOIN member m ON m.memberid = m2.memberid
          WHERE a.logon = true) login
     LEFT JOIN ( SELECT a.logdate::date AS meetingdate,
            a.date_dim_id,
            a.logdate,
            n.nfccardid,
            n.cardnumber,
            m.memberid,
            m.memberof,
            m.firstname,
            m.lastname,
            rank() OVER (PARTITION BY n.cardnumber, a.date_dim_id ORDER BY a.logdate) AS rnk
           FROM attendancelog a
             JOIN nfccard n ON a.cardnumber::text = n.cardnumber::text
             JOIN membernfccardassoc m2 ON m2.nfccardid = n.nfccardid
             JOIN member m ON m.memberid = m2.memberid
          WHERE a.logon = false) logout ON login.nfccardid = logout.nfccardid AND login.date_dim_id = logout.date_dim_id AND login.rnk = logout.rnk;

CREATE OR REPLACE VIEW public.vw_frcattendance
AS SELECT a.meetingdate,
    a.memberid,
    a.firstname,
    a.lastname,
    a.memberof,
    a.total_attendancetime
   FROM ( SELECT va.meetingdate,
            va.memberid,
            va.firstname,
            va.lastname,
            m.memberof,
            sum(va.attendancetime) AS total_attendancetime
           FROM vw_attendance va
             LEFT JOIN member m ON va.memberid = m.memberid
          GROUP BY va.meetingdate, va.memberid, va.firstname, va.lastname, m.memberof
          ORDER BY va.meetingdate) a
  WHERE a.memberof = 'FRC'::text;

CREATE OR REPLACE VIEW public.vw_scattendance
AS SELECT a.meetingdate,
    a.memberid,
    a.firstname,
    a.lastname,
    a.memberof,
    a.total_attendancetime
   FROM ( SELECT va.meetingdate,
            va.memberid,
            va.firstname,
            va.lastname,
            m.memberof,
            sum(va.attendancetime) AS total_attendancetime
           FROM vw_attendance va
             LEFT JOIN member m ON va.memberid = m.memberid
          GROUP BY va.meetingdate, va.memberid, va.firstname, va.lastname, m.memberof
          ORDER BY va.meetingdate) a
  WHERE a.memberof = 'SC'::text;

CREATE OR REPLACE VIEW public.vw_users
AS SELECT concat(member.firstname, member.lastname) AS name,
    nfccard.cardnumber,
    member.memberof
   FROM membernfccardassoc
     LEFT JOIN member ON membernfccardassoc.memberid = member.memberid
     LEFT JOIN nfccard ON membernfccardassoc.nfccardid = nfccard.nfccardid
  WHERE nfccard.isactive = true;